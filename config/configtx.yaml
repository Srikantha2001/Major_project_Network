
Organizations:
  
  # Orderer1Org => management org orderer 

  - &Orderer1Org
        
    Name: Orderer1Org

    ID: Orderer1MSP

    MSPDir: ../crypto-config/ordererOrganizations/example.com/msp

    Policies:
      Readers:
        Type: Signature
        Rule: "OR('Orderer1MSP.member')"
      Writers:
        Type: Signature
        Rule: "OR('Orderer1MSP.member')"
      Admins:
        Type: Signature
        Rule: "OR('Orderer1MSP.admin')"

    OrdererEndpoints:
      - mngorderer.example.com:7050


  # # Orderer2Org => Doctor-patient Orderer

  # - &Orderer2Org
        
  #   Name: Orderer2Org

  #   ID: Orderer2MSP

  #   MSPDir: ../crypto-config/ordererOrganizations/example2.com/msp

  #   Policies:
  #     Readers:
  #       Type: Signature
  #       Rule: "OR('Orderer2MSP.member')"
  #     Writers:
  #       Type: Signature
  #       Rule: "OR('Orderer2MSP.member')"
  #     Admins:
  #       Type: Signature
  #       Rule: "OR('Orderer2MSP.admin')"

  #   OrdererEndpoints:
  #     - patdocorderer.example2.com:7051

  - &MngOrg1
      
    Name: MngOrg1MSP

    ID: MngOrg1MSP

    MSPDir: ../crypto-config/peerOrganizations/mngorg1.example.com/msp

    Policies:
      Readers:
        Type: Signature
        Rule: "OR('MngOrg1MSP.admin', 'MngOrg1MSP.peer', 'MngOrg1MSP.client')"
      Writers:
        Type: Signature
        Rule: "OR('Org1MSP.admin', 'Org1MSP.client')"
      Admins:
        Type: Signature
        Rule: "OR('Org1MSP.admin')"
      
      # Endorsement policy refers to rule for updating the ledger
      # Here We have considered atleast 3 out of 4 people from management must endorse before updating the ledger.

      Endorsement:
        Type: Signature
        Rule: "OutOf(3,'MngOrg1MSP.peer','MngOrg1MSP.peer','MngOrg1MSP.peer','MngOrg1MSP.peer')"
   
  # - &DocOrg1
      
  #     Name: DocOrg1MSP

  #     ID: DocOrg1MSP

  #     MSPDir: ../crypto-config/peerOrganizations/docorg1.example2.com/msp

  #     Policies:
  #       Readers:
  #         Type: Signature
  #         Rule: "OR('DocOrg1MSP.admin', 'DocOrg1MSP.peer', 'DocOrg1MSP.client')"
  #       Writers:
  #         Type: Signature
  #         Rule: "OR('DocOrg1MSP.admin', 'DocOrg1MSP.client')"
  #       Admins:
  #         Type: Signature
  #         Rule: "OR('DocOrg1MSP.admin')"
  #       Endorsement:
  #         Type: Signature
  #         Rule: "OR('DocOrg1MSP.client')"

  # - &PatOrg1
      
  #     Name: PatOrg1MSP

  #     ID: PatOrg1MSP

  #     MSPDir: ../crypto-config/peerOrganizations/patorg1.example3.com/msp

  #     Policies:

  #       # Reading of Data of patient permission is given to the doctor who is the peer of that patient ( doctor who is handling that patient)

  #       Readers:
  #         Type: Signature
  #         Rule: "OR('PatOrg1MSP.admin', 'PatOrg1MSP.peer', 'PatOrg1MSP.client', 'DocOrg1MSP.peer')"
  #       Writers:
  #         Type: Signature
  #         Rule: "OR('PatOrg1MSP.admin', 'PatOrg1MSP.client')"
  #       Admins:
  #         Type: Signature
  #         Rule: "OR('PatOrg1MSP.admin')"

  #       # For Endorsement, both the patient and the Doctor has to validate that data from the sensor.

  #       Endorsement:
  #         Type: Signature
  #         Rule: "AND('PatOrg1MSP.client','DocOrg1MSP.peer')"
  
Capabilities:
  
  Channel: &ChannelCapabilities
    V2_0: true
      
  Orderer: &OrdererCapabilities
    V2_0: true

  Application: &ApplicationCapabilities
    V2_5: true

Application: &ApplicationDefaults

  Organizations:

  Policies:
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"
    LifecycleEndorsement:
      Type: ImplicitMeta
      Rule: "MAJORITY Endorsement"
    Endorsement:
      Type: ImplicitMeta
      Rule: "MAJORITY Endorsement"

  Capabilities:
      <<: *ApplicationCapabilities

Orderer: &OrdererDefaults

  OrdererType: etcdraft
    
  Addresses:
    - mngorderer.example.com:7050
    # - patdocorderer.example2.com:7051

  EtcdRaft:
    
    Consenters:
  
      - Host: mngorderer.example.com
        Port: 7050
        ServerTLSCert: ../crypto-config/ordererOrganizations/example.com/orderers/mngorderer.example.com/tls/server.crt
        ClientTLSCert: ../crypto-config/ordererOrganizations/example.com/orderers/mngorderer.example.com/tls/server.crt
      
      # - Host: patdocorderer.example2.com
      #   Port: 7051
      #   ServerTLSCert: ../crypto-config/ordererOrganizations/example2.com/orderers/patdocorderer.example2.com/tls/server.crt
      #   ClientTLSCert: ../crypto-config/ordererOrganizations/example2.com/orderers/patdocorderer.example2.com/tls/server.crt

  BatchTimeout: 2s

  BatchSize:

    MaxMessageCount: 10
    AbsoluteMaxBytes: 99 MB
    PreferredMaxBytes: 512 KB
    
  Organizations:

  Policies:
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"
    BlockValidation:
      Type: ImplicitMeta
      Rule: "ANY Writers"

Channel: &ChannelDefaults
    
  Policies:
      
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"

  Capabilities:
    <<: *ChannelCapabilities

Profiles:

  ManagementArtifactsGenesis:
    <<: *ChannelDefaults
    Orderer:
      <<: *OrdererDefaults
      Organizations:
        - *Orderer1Org
        # - *Orderer2Org
      Capabilities: *OrdererCapabilities
    Application:
      <<: *ApplicationDefaults
      Organizations:
        - *MngOrg1
        # - *DocOrg1
        # - *PatOrg1
      Capabilities: *ApplicationCapabilities
